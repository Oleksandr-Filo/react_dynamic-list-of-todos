{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectTodoId","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onSelectStatus","status","onFilter","query","value","onChange","event","currentTarget","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodoId","setStatus","setQuery","visibleTodos","enteredQuery","todosList","normalizedQuery","toLowerCase","split","filter","Boolean","join","includes","getFilteredTodosByQuery","selectedTodo","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38b16800.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectTodoId: React.Dispatch<React.SetStateAction<number | null>>;\n  selectedTodoId: number | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={`far fa-eye${selectedTodoId === todo.id ? '-slash' : ''}`} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onSelectStatus: (status: string) => void;\n  status: string;\n  onFilter: React.Dispatch<React.SetStateAction<string>>;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectStatus,\n  status,\n  onFilter,\n  query,\n}) => {\n  const handleChangeFilterQuery = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => onFilter(event.currentTarget.value);\n\n  const handleChangeStatus = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => onSelectStatus(event.currentTarget.value);\n\n  const handleClickResetFilter = () => onFilter('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeFilterQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClickResetFilter}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  const handleClickCloseModal = () => onClose();\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClickCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filteredTodosByStatus = todos.filter(todo => {\n    switch (status) {\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const getFilteredTodosByQuery = (\n    enteredQuery: string,\n    todosList: Todo[],\n  ) => {\n    const normalizedQuery = enteredQuery\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .join(' ');\n\n    return todosList.filter(\n      todo => todo.title.toLowerCase().includes(normalizedQuery),\n    );\n  };\n\n  const visibleTodos = getFilteredTodosByQuery(query, filteredTodosByStatus);\n\n  const selectStatus = (value: string) => {\n    setStatus(value);\n  };\n\n  const selectedTodo = visibleTodos.find(\n    todo => todo.id === selectedTodoId,\n  ) || null;\n\n  const closeTodoModal = () => {\n    setSelectedTodoId(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelectStatus={selectStatus}\n                status={status}\n                onFilter={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectTodoId={setSelectedTodoId}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onClose={closeTodoModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}